- name: download k3sup binary
  get_url:  
    url: "https://get.k3sup.dev"
    dest: "/opt/k3sup.sh"
    force: true
    mode: 'u+x'
  when: inventory_hostname in groups.get('master')
  tags:
    - k3s

- name: create .bashrc
  template:
    src: bashrc.j2
    dest: '{{ item }}'
  with_items:
    /home/pi/.bashrc
    /root/.bashrc
  tags:
    - k3s
    - bashrc


- name: Execute the ~/k3sup.sh
  shell: "/opt/k3sup.sh"
  tags:
    - k3s

# SSH Private key is copied to 'control plane' node to be able to ssh on itself and start k3s
- name: Creates directory
  file:
    path: /root/.ssh
    state: directory
  tags:
    - k3s

- name: Copy private ssh key to ~/.ssh
  copy:
    src: "{{ ansible_ssh_private_key_file }}" 
    dest: "/root/.ssh/manjaro-rpi" 
    force: True
    backup: True
  register: ssh_imported
  when: inventory_hostname in groups.get('master')
  tags:
    - k3s

- name: create k3s control plane
  command:
  args:
    argv:
      - k3sup
      - install
      - --ip 
      - "{{ ansible_host }}"
      - --ssh-key
      - "{{ ansible_ssh_private_key_file }}"
      - --k3s-version 
      - "{{ k3s_version }}"
      - --user 
      - "{{ ansible_user }}"
      - --k3s-extra-args 
      - "--token {{ cluster_secret }} --advertise-address {{ ansible_host }} --disable servicelb --disable traefik"
    creates: "{{playbook_dir}}/kubeconfig"
  when: inventory_hostname in groups.get('master')
  register: master_created
  tags:
    - k3s

- name: Debug report of master creation
  debug: var=master_created
  when: master_created is failed
  tags:
    - k3s

- name: Check API availability of master servers
  uri:
    url: "https://{{ ansible_host }}:6443"
    method: GET
    validate_certs: False
    status_code: 401
    body_format: json
  with_items: "{{ ansible_host }}"
  register: http_api_result
  retries: 6
  delay: 15
  until: http_api_result is not failed
  when: 
    - inventory_hostname in groups.get('master')
    - master_created is succeeded
  tags:
    - k3s

- name: creating k3s node agent
  command:
  args:
    argv:
      - k3sup
      - join
      - --server-ip
      - "{{ hostvars[groups['master'].0].ansible_host }}"
      - --ip
      - "{{ hostvars[item].ansible_host }}"
      - --ssh-key
      - "{{ ansible_ssh_private_key_file }}" 
      - --user
      - "{{ ansible_user }}"
      - --k3s-version
      - "{{ k3s_version }}"
      - --k3s-extra-args
      - "--token {{ cluster_secret }} "
  with_items: "{{ groups['nodes'] }}"
  when:
    - inventory_hostname in groups.get('master')
    - master_created is succeeded
    - http_api_result is succeeded
  register: node_worker_joined
  tags:
    - k3s

- name: Debug report of k3s workes joined
  debug: var=node_worker_joined
  when: node_worker_joined is failed
  tags:
    - k3s
